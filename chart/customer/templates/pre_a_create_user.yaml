apiVersion: batch/v1
kind: Job
metadata:
  name: {{ cat .Release.Name "-" .Chart.Name "-create-user-" (randAlphaNum 5 | lower) | nospace | trunc 63 }}
  labels:
    {{- include "customer.labels" . | indent 4 }}
spec:
  template:
    metadata:
      name: {{ cat .Release.Name "-" .Chart.Name "-create-user-" (randAlphaNum 5 | lower) | nospace }}
      labels:
        {{- include "customer.labels" . | indent 8 }}
    spec:
      restartPolicy: Never
      initContainers:
      {{- include "customer.initcontainer" . | indent 6 }}
      containers:
      - name: create-user
        image: {{ .Values.bash.image.repository }}:{{ .Values.bash.image.tag }}
        command: ["/bin/bash", "-c" ]
        args:
        - >
            secret=${HS256_KEY};
            jwt1=`echo -n '{"alg":"HS256","typ":"JWT"}' | openssl enc -base64`;
            jwt2=`echo -n '{"scope":["admin"],"user_name":"admin"}' | openssl enc -base64`;
            jwt3=`echo -n "${jwt1}.${jwt2}" | tr '+\/' '-_' | tr -d '=' | tr -d '\r\n'`;
            jwt4=`echo -n "${jwt3}" | openssl dgst -binary -sha256 -hmac "${secret}" | openssl enc -base64 | tr '+\/' '-_' | tr -d '=' | tr -d '\r\n'`;
            jwt=`echo -n "${jwt3}.${jwt4}"`;
            for i in `seq 1 120`; do
              curl --max-time 5 -H "Content-type: application/json" -H "Authorization: Bearer ${jwt}" -X POST -d '{"username": "${COUCHDB_USER}", "password": "${COUCHDB_PASSWORD}", "firstName": "user", "lastName": "name", "email": "user@name.com"}' http://{{- template "customer.fullname" . }}:{{ .Values.service.externalPort }}/micro/customer;
            done
        imagePullPolicy: {{ .Values.bash.image.pullPolicy }}
        env:
        {{- include "customer.couchdb.environmentvariables" . | indent 8 }}
        {{- include "customer.hs256key.environmentvariables" . | indent 8 }}